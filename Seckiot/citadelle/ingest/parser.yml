name: citadelle
ignored_values: []
pipeline:
  - name: json_event
    description: ''
    filter: ''
    external:
      name: json.parse-json
      properties:
        input_field: '{{original.message}}'
        output_field: message
  - name: parsed_date
    description: ''
    filter: ''
    external:
      name: date.parse
      properties:
        input_field: '{{json_event.message.timestamp}}'
        output_field: datetime
        format: null
        timezone: UTC
  - name: set_ecs_fields
    description: ''
    filter: ''
    external: null
  - name: set_custom_fields
    description: Seckiot fields
    filter: ''
    external: null
  - name: event
    description: event field
    filter: ''
    external: null
  - name: observer
    description: observer field
    filter: ''
    external: null
  - name: network
    description: network field
    filter: ''
    external: null
  - name: rule
    description: rule field
    filter: ''
    external: null
  - name: device
    description: device field
    filter: ''
    external: null
  - name: source
    description: source field
    filter: ''
    external: null
  - name: destination
    description: destination field
    filter: ''
    external: null
  - name: related
    description: related field
    filter: ''
    external: null
  - name: vulnerability
    description: vulnerability field
    filter: ''
    external: null
stages:
  set_ecs_fields:
    actions:
      - set:
          '@timestamp': '{{parsed_date.datetime}}'
        filter: ''
        name: set
  set_custom_fields:
    actions:
      - set:
          seckiot.module: '{{json_event.message.skt.module}}'
          seckiot.alert.id: '{{json_event.message.skt.alert_id}}'
          seckiot.sensor.name: '{{json_event.message.skt.sensor}}'
          seckiot.sniffer.name: '{{json_event.message.skt.sniffer}}'
          seckiot.catch_area.name: '{{json_event.message.skt.capture_zone}}'
        filter: ''
        name: set
  event:
    actions:
      - set:
          event.kind: '{{json_event.message.event.kind}}'
          event.type: '{{json_event.message.event.type}}'
          event.outcome: '{{json_event.message.event.outcome}}'
          event.category: '{{json_event.message.event.category}}'
          event.severity: '{{json_event.message.event.severity}}'
        filter: ''
        name: set
  observer:
    actions:
      - set:
          observer.name: '{{json_event.message.event.outcome}}'
          observer.type: '{{json_event.message.observer._type}}'
          observer.vendor: '{{json_event.message.observer.vendor}}'
          observer.product: '{{json_event.message.observer.product}}'
          observer.version: '{{json_event.message.observer.version}}'
        filter: ''
        name: set
  network:
    actions:
      - set:
          network.protocol: '{{json_event.message.protocol.name}}'
          network.transport: '{{json_event.message.protocol.transport}}'
        filter: ''
        name: set
  rule:
    actions:
      - set:
          rule.id: '{{json_event.message.rule.uuid}}'
          rule.name: '{{json_event.message.rule.name}}'
          rule.author: '{{json_event.message.rule.author}}'
          rule.version: '{{json_event.message.rule.version}}'
          rule.description: '{{json_event.message.rule.description}}'
        filter: ''
        name: set
  device:
    actions:
      - set:
          device.model.name: |
            [ {%- for asset in json_event.message.skt.assets -%}
              "{{asset.name}}",
              {%- endfor -%}
            ]
          device.manufacturer: |
            [ {%- for asset in json_event.message.skt.assets -%}
              "{{asset.hardware_vendor}}",
              {%- endfor -%}
            ]
          device.model.identifier: |
            [ {%- for asset in json_event.message.skt.assets -%}
              "{{asset.id}}",
              {%- endfor -%}
            ]
        filter: ''
        name: set
  source:
    actions:
      - set:
          source.ip: '{{json_event.message.source.ip}}'
          source.mac: '{{json_event.message.source.mac}}'
          source.port: '{{json_event.message.source.port}}'
        filter: ''
        name: set
  destination:
    actions:
      - set:
          destination.ip: '{{json_event.message.destination.ip}}'
          destination.mac: '{{json_event.message.destination.mac}}'
          destination.port: '{{json_event.message.destination.port}}'
        filter: ''
        name: set
  related:
    actions:
      - set:
          related.ip: '{{json_event.message.related.ip}}'
          related.user: '{{json_event.message.related.user}}'
        filter: ''
        name: set
  vulnerability:
    actions:
      - set:
          vulnerability.id: '{{json_event.message.vulnerability.id}}'
          vulnerability.category: '{{json_event.message.vulnerability.category}}'
          vulnerability.severity: '{{json_event.message.vulnerability.severity}}'
          vulnerability.reference: '{{json_event.message.vulnerability.reference}}'
          vulnerability.report_id: '{{json_event.message.vulnerability.report_id}}'
          vulnerability.score.base: '{{json_event.message.vulnerability.score.base}}'
          vulnerability.description: '{{json_event.message.vulnerability.description}}'
          vulnerability.enumeration: '{{json_event.message.vulnerability.enumeration}}'
          vulnerability.score.version: '{{json_event.message.vulnerability.score.version}}'
          vulnerability.classification: '{{json_event.message.vulnerability.classification}}'
          vulnerability.scanner.vendor: '{{json_event.message.vulnerability.scanner.vendor}}'
          vulnerability.score.temporal: '{{json_event.message.vulnerability.score.temporal}}'
          vulnerability.score.environmental: '{{json_event.message.vulnerability.score.environmental}}'
        filter: ''
        name: set

